name: Tests

on: [push, pull_request]

jobs:

  Lint:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
      - name: Lint Code Base
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_YAML: false
          VALIDATE_XML: false
          VALIDATE_DOCKERFILE_HADOLINT: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  Build:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: ["ubuntu"]
        python-version: ['3.8', '3.9']
    env:
      bld_path: /tmp/build
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - name: 'Deploying miniconda'
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: 'latest'
          environment-file: conda.recipes/conda_build_env.yaml
          python-version: ${{ matrix.python-version }}
      - name: 'Set up output folder'
        run: |
          mkdir -p "${bld_path}"
      - name: 'Build pip package'
        run: |
          python3 -m build --outdir "${bld_path}"

  Pytest:
    needs: [Build]
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9']
        os: [ubuntu]
    env:
      bld_path: /tmp/build
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - name: 'Set up Python'
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: 'Install'
        run: |
          pip install .
      - name: 'Run pytest'
        run: |
          pip install pytest
          python -m pytest
